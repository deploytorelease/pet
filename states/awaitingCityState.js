const { weatherService, geocodingService } = require('../utils/weatherServiceInstance');
const { States, userStates } = require('../utils/constants');

async function handleCityInput(bot, chatId, city) {
  const coordinates = await geocodingService.getCoordinates(city);
  if (!coordinates) {
    await bot.sendMessage(
      chatId,
      `–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —É–∫–∞–∑–∞–Ω–Ω—ã–π –≥–æ—Ä–æ–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.`
    );
    return;
  }

  const weatherData = await weatherService.getWeather(coordinates.lat, coordinates.lon);
  if (weatherData) {
    const { temperature, description, feelsLike, humidity, windSpeed } = weatherData;
    await bot.sendMessage(
      chatId,
      `–¢–µ–∫—É—â–∞—è –ø–æ–≥–æ–¥–∞ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –≤–∞–º–∏ –≥–æ—Ä–æ–¥–µ:
       üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${temperature}¬∞C
       üå§ –û–ø–∏—Å–∞–Ω–∏–µ: ${description}
       ü§î –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: ${feelsLike}¬∞C
       üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: ${humidity}%
       üí® –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: ${windSpeed} –º/—Å`
    );

    userStates[chatId] = {
      state: States.AWAITING_MOOD,
      city: city,
      weather: weatherData,
    };
    await bot.sendMessage(chatId, "–ö–∞–∫ –±—ã –≤—ã –æ–ø–∏—Å–∞–ª–∏ —Å–≤–æ–µ —Ç–µ–∫—É—â–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ?");
  } else {
    await bot.sendMessage(
      chatId,
      `–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≥–æ–¥–µ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –ø–æ–≥–æ–¥—É —Å–∞–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "20¬∞C, —Å–æ–ª–Ω–µ—á–Ω–æ").`
    );
    userStates[chatId] = { state: States.AWAITING_MANUAL_WEATHER };
  }
}

module.exports = { handleCityInput };